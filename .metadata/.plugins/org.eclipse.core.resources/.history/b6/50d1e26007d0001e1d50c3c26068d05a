package swingPanels;

import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.util.Map;

import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JCheckBox;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;

public class LocationPanel {

	private static final long serialVersionUID = 1L;
	
	public static JPanel locationPanel;
	
	public LocationPanel(String country, String city, Map<String, String> weatherInformation) 
	{
		locationPanel = generateLocationPanel(country, city, weatherInformation);
	}
	
	
	public static JPanel generateLocationPanel(String country, String city, Map<String, String> weatherInformation) {
		
		JPanel locationPanel = null;
		
		try {
			locationPanel = new JPanelMitBackground("E:/Coding_Projects/WeatherApp/Images/MainPanelBackground_MainFrame.jpg");
		} catch (IOException e) {
			e.printStackTrace();
		}
		
		JPanel weatherInformation_panel = new JPanel();
		weatherInformation_panel.setBackground(Color.BLACK);
		
		JLabel locationName_label = new JLabel("New label");
		locationName_label.setFont(new Font("Arial Black", Font.PLAIN, 20));
		locationName_label.setForeground(Color.WHITE);
		locationName_label.setFont(new Font("Arial Black", Font.PLAIN, 20));
		
		JLabel weatherImage_label = new JLabel("weatherImage");
		weatherImage_label.setFont(new Font("Arial", Font.PLAIN, 11));
		weatherImage_label.setForeground(Color.WHITE);
		weatherImage_label.setFont(new Font("Arial", Font.PLAIN, 11));
		
		JCheckBox favorite_checkbox = new JCheckBox("save as favorite");
		favorite_checkbox.setFont(new Font("Arial Black", Font.PLAIN, 12));
		favorite_checkbox.setBackground(Color.BLACK);
		favorite_checkbox.setForeground(Color.WHITE);
		
		
		GroupLayout groupLayout = new GroupLayout(locationPanel);
		groupLayout.setHorizontalGroup(
			groupLayout.createParallelGroup(Alignment.LEADING)
				.addGroup(groupLayout.createSequentialGroup()
					.addContainerGap(273, Short.MAX_VALUE)
					.addComponent(weatherInformation_panel, GroupLayout.PREFERRED_SIZE, 353, GroupLayout.PREFERRED_SIZE)
					.addGap(74))
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(51)
					.addComponent(weatherImage_label)
					.addContainerGap(580, Short.MAX_VALUE))
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(178)
					.addComponent(locationName_label, GroupLayout.PREFERRED_SIZE, 188, GroupLayout.PREFERRED_SIZE)
					.addContainerGap(334, Short.MAX_VALUE))
				.addGroup(Alignment.TRAILING, groupLayout.createSequentialGroup()
					.addContainerGap(494, Short.MAX_VALUE)
					.addComponent(favorite_checkbox)
					.addGap(109))
		);
		groupLayout.setVerticalGroup(
			groupLayout.createParallelGroup(Alignment.TRAILING)
				.addGroup(groupLayout.createSequentialGroup()
					.addGap(42)
					.addComponent(locationName_label)
					.addGap(31)
					.addComponent(favorite_checkbox)
					.addGap(20)
					.addComponent(weatherImage_label)
					.addPreferredGap(ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
					.addComponent(weatherInformation_panel, GroupLayout.PREFERRED_SIZE, 173, GroupLayout.PREFERRED_SIZE)
					.addGap(75))
		);
		GridBagLayout gbl_weatherInformation_panel = new GridBagLayout();
		gbl_weatherInformation_panel.columnWidths = new int[]{0, 0, 0, 0};
		gbl_weatherInformation_panel.rowHeights = new int[]{0, 0, 0, 0, 0};
		gbl_weatherInformation_panel.columnWeights = new double[]{0.0, 0.0, 0.0, Double.MIN_VALUE};
		gbl_weatherInformation_panel.rowWeights = new double[]{0.0, 0.0, 0.0, 0.0, Double.MIN_VALUE};
		weatherInformation_panel.setLayout(gbl_weatherInformation_panel);
		
		String temperature;
		String feelsLike;
		String windSpeed;
		
		try {
			temperature = weatherInformation.get("current temp");
			feelsLike = weatherInformation.get("feels_like");
			windSpeed = weatherInformation.get("speed");
		}catch(Exception exception) {
			
			System.out.println(exception.getMessage());
			
		}
		
		JLabel temprature_label = new JLabel("Temperature:");
		temprature_label.setForeground(Color.WHITE);
		temprature_label.setFont(new Font("Arial Black", Font.PLAIN, 13));
		GridBagConstraints gbc_temprature_label = new GridBagConstraints();
		gbc_temprature_label.insets = new Insets(0, 0, 5, 0);
		gbc_temprature_label.gridx = 2;
		gbc_temprature_label.gridy = 1;
		weatherInformation_panel.add(temprature_label, gbc_temprature_label);
		
		JLabel feelsLike_label = new JLabel("Feels Like:");
		feelsLike_label.setForeground(Color.WHITE);
		feelsLike_label.setFont(new Font("Arial Black", Font.PLAIN, 13));
		GridBagConstraints gbc_feelsLike_label = new GridBagConstraints();
		gbc_feelsLike_label.insets = new Insets(0, 0, 5, 0);
		gbc_feelsLike_label.gridx = 2;
		gbc_feelsLike_label.gridy = 2;
		weatherInformation_panel.add(feelsLike_label, gbc_feelsLike_label);
		
		JLabel windSpeed_label = new JLabel("Wind Speed:");
		windSpeed_label.setForeground(Color.WHITE);
		windSpeed_label.setFont(new Font("Arial Black", Font.PLAIN, 13));
		GridBagConstraints gbc_windSpeed_label = new GridBagConstraints();
		gbc_windSpeed_label.gridx = 2;
		gbc_windSpeed_label.gridy = 3;
		weatherInformation_panel.add(windSpeed_label, gbc_windSpeed_label);
		locationPanel.setLayout(groupLayout);
		
		
		return locationPanel;
		
	}
}
